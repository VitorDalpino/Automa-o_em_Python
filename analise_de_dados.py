# -*- coding: utf-8 -*-
"""analise_de_dados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DOWypWCL6-vbcbYm4NKUFoEeKfvpABR9
"""

# Importar biblioteca
import pandas as pd

# Importar data frame
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/telecom_users.csv')

# Remover primeira coluna
# df = df.drop(['Unnamed: 0'], axis=1) # Remover primeira coluna pelo nome
df = df.drop(df.columns[[0,22]], axis=1) # Remover primeira coluna pelo indice
# df= df.drop(axis=0, index=[1,2,3,4,5]) # Remover as 5 primeiras linhas


# Converter 'TotalGasto' para número
df['TotalGasto'] = pd.to_numeric(df['TotalGasto'], errors='coerce')
# df = df.dropna(how='any' , axis=0) # Remover linhas com algum erro

# Informações gerais sobre os dados df
df.info()

# Filtro nos dados
df[df['Casado'] == 'Sim'] # Somente casados
df[(df['Casado'] == 'Sim') & (df['Dependentes'] == 'Sim')]['IDCliente'] # Dois critérios (E)
df[(df['Casado'] == 'Sim') | (df['Dependentes'] == 'Sim')]['IDCliente'] # Dois critérios (OU)

# Análise inicial do cancelamento
df['Churn'].value_counts(normalize=True).map("{:.1%}".format)

pd.DataFrame({
    'Contagem': df['Churn'].value_counts(),
    'Porcentagem': df['Churn'].value_counts(normalize=True).map("{:.1%}".format)
})

# Importar biblioteca de gráficos
import plotly.express as px

# Criar gráfico
fig = px.histogram(df, x='TotalGasto', color='Churn')
fig.show()

# Criar tabela
df.pivot_table(index='TipoContrato', columns='MesesComoCliente', aggfunc='count', fill_value=0)['IDCliente']

# Importar biblioteca de gráficos
import plotly.express as px

# Criar gráfico
fig = px.histogram(df, x='MesesComoCliente', color='TipoContrato')
fig.show()

# Criar tabela
df.pivot_table(index='TipoContrato', columns='MesesComoCliente', aggfunc='count', fill_value=0)['IDCliente']

# Importar biblioteca de gráficos
import plotly.express as px

# Criar gráfico
fig = px.histogram(df, x='MesesComoCliente', color='TipoContrato')
fig.show()

# Criar tabela
df.pivot_table(index='Churn', columns='TipoContrato', aggfunc='count', fill_value=0)['IDCliente']

# Importar biblioteca de gráficos
import plotly.express as px

# Criar gráfico
fig = px.histogram(df, x='TipoContrato', color='Churn')
fig.show()

# Criar tabela
df.pivot_table(index='Churn', columns='MesesComoCliente', aggfunc='count', fill_value=0)['IDCliente']

# Importar biblioteca de gráficos
import plotly.express as px

# Criar gráfico
fig = px.histogram(df, x='TipoContrato', color='Churn')
fig.show()

# Criar tabela
df.pivot_table(index='TipoContrato', columns='Churn', aggfunc='count', fill_value=0)['IDCliente']

# Criar todos os gráficos relacionados

for coluna in df:
    fig = px.histogram(df, x=coluna, color='Churn', title='Gráfico de tipo de contrato')
    fig.show()

    try:
        df.pivot_table(index= coluna, columns='Churn', aggfunc='count', fill_value=0)['IDCliente']
        display(df.pivot_table(index= coluna, columns='Churn', aggfunc='count', fill_value=0)['IDCliente'])
    except:
      pass